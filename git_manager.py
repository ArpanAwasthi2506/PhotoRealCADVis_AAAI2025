import os
import subprocess
from datetime import datetime

def initialize_repo():
    """Initialize Git repository with proper structure"""
    if not os.path.exists(".git"):
        subprocess.run(["git", "init"])
    
    # Create .gitignore
    if not os.path.exists(".gitignore"):
        with open(".gitignore", "w") as f:
            f.write("# Autogenerated .gitignore\n")
            f.write("__pycache__/\n")
            f.write("*.pyc\n")
            f.write("*.tmp\n")
            f.write("renders/temp_*\n")
            f.write("dataset/images/*\n")
            f.write("dataset/backgrounds/*\n")
    
    # Initial commit
    subprocess.run(["git", "add", "."])
    subprocess.run(["git", "commit", "-m", "Initial project setup"])

def commit_progress(message=None):
    """Commit progress with timestamp"""
    if not message:
        message = f"Progress update {datetime.now().strftime('%Y%m%d-%H%M%S')}"
    subprocess.run(["git", "add", "."])
    subprocess.run(["git", "commit", "-m", message])
    
def push_to_github(repo_url, branch="main"):
    """Push to remote GitHub repository"""
    # Set remote
    subprocess.run(["git", "remote", "add", "origin", repo_url])
    # Create and push to branch
    subprocess.run(["git", "checkout", "-b", branch])
    subprocess.run(["git", "push", "-u", "origin", branch])
